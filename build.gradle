import com.xpdustry.toxopid.spec.ModMetadata
import com.xpdustry.toxopid.spec.ModPlatform

plugins {
  id "java"
  id "com.xpdustry.toxopid" version "4.1.2"
  id "net.kyori.indra.publishing" version "3.1.3"
}

def metadata = ModMetadata.fromJson(file(sourceSets.main.resources.srcDirs[0].toPath().resolve("plugin.hjson")))
group = "fr.zetamap"
version = metadata.version
description = metadata.description

repositories {
  mavenCentral()
  maven { url "https://maven.xpdustry.com/mindustry" }
  maven { url "https://www.jitpack.io" }
}

toxopid {
  compileVersion = "v${metadata.minGameVersion}"
  platforms = [ModPlatform.SERVER]
}

dependencies {
  compileOnly toxopid.dependencies.arcCore
  compileOnly toxopid.dependencies.mindustryCore
}

// Force compilation to Java 8
tasks.withType(JavaCompile) {
  targetCompatibility = JavaVersion.VERSION_1_8
  sourceCompatibility = JavaVersion.VERSION_1_8
  options.encoding = "UTF-8"
  options.compilerArgs.addAll(['--release', '8'])
}

jar {
  archiveFileName = "${metadata.name}.jar"

  //copy the builded jar to the working directory
  doLast {
    copy {
      from jar
      into rootDir
    }
  }
}

// Publishing
signing {
  def signingKey = findProperty("signingKey")
  def signingPassword = findProperty("signingPassword")
  useInMemoryPgpKeys(signingKey, signingPassword)
}

indra {
  javaVersions {
    target(8)
    minimumToolchain(8)
  }
    
  mitLicense()
  publishReleasesTo("xpdustry", "https://maven.xpdustry.com/releases")

  def repo = metadata.repository.split("/")
  github(repo[0], repo[1]) {
    ci(true)
    issues(true)
    scm(true)
  }

  configurePublications {
    // Why isn't it already included?
    from components.java
    artifact sourcesJar
    artifact javadocJar
  
    pom {
      developers {
        metadata.author.split(",").each { a ->
          developer {
            id = a.trim()
            url = "https://github.com/${id.get()}"
          }
        }
      }
    }
  }
}

// Why don't these tasks already exist?
task javadocJar(type: Jar, dependsOn: 'javadoc') {
  from javadoc.destinationDir
  javadoc.options.addStringOption('Xdoclint:none', '-quiet')
  archiveClassifier = 'javadoc'
}
task sourcesJar(type: Jar, dependsOn: 'classes') {
  from sourceSets.main.allSource
  archiveClassifier = 'sources'
}